{"version":3,"sources":["images sync /^/.*/.JPG$","images/Bhavik Singhal.JPG","images/D.K. Goyal & Santosh Goyal.JPG","images/Deepak Goyal & Suman Goyal.JPG","images/Divyam Goyal.JPG","images/Ishita Singhal.JPG","images/Neha Mohta & Navneet Mohta.JPG","images/Nisha Mittal & Gopal Mittal.JPG","images/Ritu Singhal & Vivek Singhal.JPG","images/Samarth Goyal.JPG","images/Sandeep Goyal & Sangeeta Goyal.JPG","images/Sanjay Goyal & Shalu Goyal.JPG","images/Sanyam Mittal & Kritika Mittal.JPG","images/Shantam Goyal.JPG","images/Shivam Goyal.JPG","images/Shrey Goyal.JPG","images/Suhaani Goyal.JPG","FamilyMember.js","FamilyTree.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","FamilyMember","nodeData","this","props","alt","name","src","require","height","Component","myTreeData","children","nodesize","x","y","svgShape","shape","containerStyles","width","FamilyTree","state","zoom","setScaleExtent","bind","dimensions","treeContainer","getBoundingClientRect","setState","translate","console","log","style","className","ref","tc","data","nodeSvgShape","orientation","nodeSize","textLayout","textAnchor","initialDepth","scaleExtent","min","max","separation","siblings","nonSiblings","allowForeignObjects","nodeLabelComponent","render","foreignObjectWrapper","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5639fa1d.chunk.js","sourcesContent":["var map = {\n\t\"./Bhavik Singhal.JPG\": 35,\n\t\"./D.K. Goyal & Santosh Goyal.JPG\": 36,\n\t\"./Deepak Goyal & Suman Goyal.JPG\": 37,\n\t\"./Divyam Goyal.JPG\": 38,\n\t\"./Ishita Singhal.JPG\": 39,\n\t\"./Neha Mohta & Navneet Mohta.JPG\": 40,\n\t\"./Nisha Mittal & Gopal Mittal.JPG\": 41,\n\t\"./Ritu Singhal & Vivek Singhal.JPG\": 42,\n\t\"./Samarth Goyal.JPG\": 43,\n\t\"./Sandeep Goyal & Sangeeta Goyal.JPG\": 44,\n\t\"./Sanjay Goyal & Shalu Goyal.JPG\": 45,\n\t\"./Sanyam Mittal & Kritika Mittal.JPG\": 46,\n\t\"./Shantam Goyal.JPG\": 47,\n\t\"./Shivam Goyal.JPG\": 48,\n\t\"./Shrey Goyal.JPG\": 49,\n\t\"./Suhaani Goyal.JPG\": 50\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","module.exports = __webpack_public_path__ + \"static/media/Bhavik Singhal.3e9b874b.JPG\";","module.exports = __webpack_public_path__ + \"static/media/D.K. Goyal & Santosh Goyal.331e7211.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Deepak Goyal & Suman Goyal.612fde89.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Divyam Goyal.3a20d877.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Ishita Singhal.ce5a80dc.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Neha Mohta & Navneet Mohta.dbc195b1.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Nisha Mittal & Gopal Mittal.5d96b8d4.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Ritu Singhal & Vivek Singhal.6fc03224.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Samarth Goyal.740a9ac0.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Sandeep Goyal & Sangeeta Goyal.7fecea50.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Sanjay Goyal & Shalu Goyal.f89b3e66.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Sanyam Mittal & Kritika Mittal.f2881e5a.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Shantam Goyal.6b4ee617.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Shivam Goyal.85a66fea.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Shrey Goyal.8d2ce461.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Suhaani Goyal.e0d017db.JPG\";","import React, { Component } from 'react';\r\n\r\nclass FamilyMember extends Component {\r\n\r\n    render() {\r\n        const { nodeData } = this.props;\r\n        return (\r\n            <div>\r\n                <img alt={nodeData.name} src={require(`./images/${nodeData.name}.JPG`)} height={\"200px\"} />\r\n                <h6> {nodeData.name} </h6>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FamilyMember;","import React, { Component } from 'react';\r\nimport './FamilyTree.css';\r\nimport FamilyMember from './FamilyMember';\r\nimport Tree from 'react-d3-tree';\r\n\r\nconst myTreeData = [\r\n    {\r\n        name: 'D.K. Goyal & Santosh Goyal',\r\n        children: [\r\n            {\r\n                name: 'Deepak Goyal & Suman Goyal',\r\n                children: [\r\n                    { name: 'Shrey Goyal' },\r\n                    { name: 'Shantam Goyal' },\r\n                ]\r\n            },\r\n            {\r\n                name: 'Sandeep Goyal & Sangeeta Goyal',\r\n                children: [\r\n                    { name: 'Shivam Goyal' },\r\n                    { name: 'Divyam Goyal' },\r\n                ]\r\n            },\r\n            {\r\n                name: 'Sanjay Goyal & Shalu Goyal',\r\n                children: [\r\n                    { name: 'Samarth Goyal' },\r\n                    { name: 'Suhaani Goyal' },\r\n                ]\r\n            },\r\n            {\r\n                name: 'Ritu Singhal & Vivek Singhal',\r\n                children: [\r\n                    { name: 'Bhavik Singhal' },\r\n                    { name: 'Ishita Singhal' },\r\n                ]\r\n            },\r\n            {\r\n                name: 'Nisha Mittal & Gopal Mittal',\r\n                children: [\r\n                    { name: 'Neha Mohta & Navneet Mohta' },\r\n                    { name: 'Sanyam Mittal & Kritika Mittal' },\r\n                ]\r\n            },\r\n        ],\r\n    }\r\n];\r\n\r\nconst nodesize = {\r\n    x: 300,\r\n    y: 300\r\n}\r\n\r\nconst svgShape = {\r\n    shape: 'none'\r\n}\r\n\r\nconst containerStyles = {\r\n    width: \"100%\",\r\n    height: \"100vh\"\r\n};\r\n\r\n\r\nclass FamilyTree extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {zoom: 1};\r\n        this.setScaleExtent = this.setScaleExtent.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const dimensions = this.treeContainer.getBoundingClientRect();\r\n        this.setScaleExtent(dimensions);\r\n        this.setState({\r\n            translate: {\r\n                x: dimensions.width / 2,\r\n                y: dimensions.height / 8\r\n            }\r\n        });\r\n    }\r\n\r\n    setScaleExtent(dimensions) {\r\n        console.log(dimensions.width);\r\n        if (dimensions.width >= 1200) {\r\n            this.setState({ zoom: 1 });\r\n        }\r\n        else if (dimensions.width >= 992) {\r\n            this.setState({ zoom: 0.9 });\r\n        }\r\n        else if (dimensions.width >= 768) {\r\n            this.setState({ zoom: 0.8 });\r\n        }\r\n        else if (dimensions.width >= 576) {\r\n            this.setState({ zoom: 0.7 });\r\n        }\r\n        else if (dimensions.width >= 320) {\r\n            this.setState({ zoom: 0.6 });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={containerStyles} id=\"treeWrapper\" className=\"FamilyTree\" ref={tc => (this.treeContainer = tc)}>\r\n                <Tree className=\"FamilyTree-Tree\"\r\n                    data={myTreeData}\r\n                    nodeSvgShape={svgShape}\r\n                    orientation=\"vertical\"\r\n                    zoom={this.state.zoom}\r\n                    // circleRadius={75}\r\n                    nodeSize={nodesize}\r\n                    textLayout={{ textAnchor: \"middle\", y: 90 }}\r\n                    translate={this.state.translate}\r\n                    initialDepth={0}\r\n                    scaleExtent={{ min: 0.1, max: 2 }}\r\n                    separation={{siblings: 1, nonSiblings: 1.1}}\r\n                    allowForeignObjects\r\n                    nodeLabelComponent={\r\n                        {\r\n                            render: <FamilyMember />,\r\n                            foreignObjectWrapper: {\r\n                                x: -125,\r\n                                // y: 80\r\n                            }\r\n                        }\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FamilyTree;\r\n","import React from 'react';\nimport './App.css';\nimport FamilyTree from './FamilyTree';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <h1> D.K. Goyal Family Tree </h1> */}\n      <FamilyTree />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}